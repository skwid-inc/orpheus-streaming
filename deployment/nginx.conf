user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile        on;
  keepalive_timeout  65;
  server_tokens   off;

  upstream orpheus_upstream {
    least_conn;
    server orpheus-tts-0:9090;
    server orpheus-tts-1:9091;
    server orpheus-tts-2:9092;
    server orpheus-tts-3:9093;
    server orpheus-tts-4:9094;
    server orpheus-tts-5:9095;
    server orpheus-tts-6:9096;
    server orpheus-tts-7:9097;
    keepalive 32;
  }

  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  server {
    listen 8080;
    server_name _;

    # Increase timeouts for TTS generation
    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;
    
    # Increase buffer sizes for audio streaming
    proxy_buffering off;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    # HTTP endpoints
    location / {
      proxy_pass http://orpheus_upstream;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      
      # Keep connections alive
      proxy_set_header Connection "";
    }
    
    # WebSocket endpoints
    location ~* ^/(v1/audio/speech/stream/ws|v1/tts)$ {
      proxy_pass http://orpheus_upstream;
      proxy_http_version 1.1;
      
      # WebSocket headers
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      
      # Disable buffering for WebSocket
      proxy_buffering off;
      
      # WebSocket timeouts
      proxy_read_timeout 3600s;
      proxy_send_timeout 3600s;
    }

    # Health check endpoint
    location /health {
      access_log off;
      add_header Content-Type text/plain;
      return 200 'healthy';
    }
    
    # Nginx health check (for container health)
    location = /nginx-health {
      access_log off;
      return 200 'ok';
    }
  }
}
