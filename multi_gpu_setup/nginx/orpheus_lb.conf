# Nginx load balancer configuration for Orpheus TTS multi-GPU setup

# Define upstream servers (8 GPU instances)
upstream orpheus_backend {
    # Round-robin load balancing (default)
    # Each server has equal weight
    server 127.0.0.1:9090;  # GPU 0
    server 127.0.0.1:9091;  # GPU 1
    server 127.0.0.1:9092;  # GPU 2
    server 127.0.0.1:9093;  # GPU 3
    server 127.0.0.1:9094;  # GPU 4
    server 127.0.0.1:9095;  # GPU 5
    server 127.0.0.1:9096;  # GPU 6
    server 127.0.0.1:9097;  # GPU 7
    
    # Keep connections alive for better performance
    keepalive 32;
}

# Main server configuration
server {
    listen 8080;  # Main load balancer port
    server_name _;
    
    # Logging
    access_log /var/log/nginx/orpheus_access.log;
    error_log /var/log/nginx/orpheus_error.log;
    
    # Increase timeouts for TTS generation
    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;
    
    # Increase buffer sizes for audio streaming
    proxy_buffering off;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    
    # HTTP endpoints
    location / {
        proxy_pass http://orpheus_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Keep connections alive
        proxy_set_header Connection "";
    }
    
    # WebSocket endpoints
    location ~* ^/(v1/audio/speech/stream/ws|v1/tts)$ {
        proxy_pass http://orpheus_backend;
        proxy_http_version 1.1;
        
        # WebSocket headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Disable buffering for WebSocket
        proxy_buffering off;
        
        # WebSocket timeouts
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 'healthy';
    }
    
    # Server status (optional, for monitoring)
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }
}
